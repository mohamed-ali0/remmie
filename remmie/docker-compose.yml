version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: remmie-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASS}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "3306:3306"
    networks:
      - remmie-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # MongoDB for AI service
  mongodb:
    image: mongo:7.0
    container_name: remmie-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
    volumes:
      - mongodb_data:/data/db
    ports:
      - "27017:27017"
    networks:
      - remmie-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      timeout: 20s
      retries: 10

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: remmie-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - remmie-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 20s
      retries: 10

  # Backend API Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: remmie-backend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=5000
      - DB_HOST=mysql
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - DB_NAME=${DB_NAME}
      - DB_PREFIX=${DB_PREFIX}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
      - FRONTEND_URL=${FRONTEND_URL}
      - DUFFEL_ACCESS_TOKENS=${DUFFEL_ACCESS_TOKENS}
      - DUFFEL_API_URL=${DUFFEL_API_URL}
      - BOOKING_BASE_URL=${BOOKING_BASE_URL}
      - STAY_BOOKING_BASE_URL=${STAY_BOOKING_BASE_URL}
      - WHATSAPP_TOKEN=${WHATSAPP_TOKEN}
      - WHATSAPP_PHONE_ID=${WHATSAPP_PHONE_ID}
      - VERIFY_TOKEN=${VERIFY_TOKEN}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - BASE_URL=${BASE_URL}
      - PYTHON_AI_URL=http://python-ai:5001
    volumes:
      - ./backend/uploads:/app/uploads
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - remmie-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      timeout: 20s
      retries: 10

  # Python AI Service
  python-ai:
    build:
      context: ./python
      dockerfile: Dockerfile
    container_name: remmie-python-ai
    restart: unless-stopped
    environment:
      - FLASK_ENV=production
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - MONGODB_URI=mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@mongodb:27017/${MONGO_DATABASE}?authSource=admin
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - remmie-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/"]
      timeout: 20s
      retries: 10

  # Frontend Service
  frontend:
    build:
      context: ./fronted
      dockerfile: Dockerfile
      args:
        - VITE_API_URL=${VITE_API_URL}
        - VITE_API_BASE_URL=${VITE_API_BASE_URL}
        - VITE_PYTHON_API_URL=${VITE_PYTHON_API_URL}
        - VITE_GOOGLE_CLIENT_ID=${VITE_GOOGLE_CLIENT_ID}
        - VITE_STRIPE_PUBLIC_KEY=${VITE_STRIPE_PUBLIC_KEY}
        - VITE_WHATSAPP_CONTACT_NUMBER=${VITE_WHATSAPP_CONTACT_NUMBER}
    container_name: remmie-frontend
    restart: unless-stopped
    depends_on:
      - backend
      - python-ai
    networks:
      - remmie-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      timeout: 20s
      retries: 10

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: remmie-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
    depends_on:
      - frontend
      - backend
      - python-ai
    networks:
      - remmie-network

  # phpMyAdmin Service
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: remmie-phpmyadmin
    restart: unless-stopped
    ports:
      - "8443:80"
    environment:
      - PMA_HOST=mysql
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    networks:
      - remmie-network
    depends_on:
      - mysql

volumes:
  mysql_data:
    driver: local
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  n8n_data:
    driver: local

networks:
  remmie-network:
    driver: bridge